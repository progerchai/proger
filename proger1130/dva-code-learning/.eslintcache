[{"/Users/aiyouwei/Documents/proger/progerchai/proger1130/dva-code-learning/src/index.jsx":"1","/Users/aiyouwei/Documents/proger/progerchai/proger1130/dva-code-learning/src/dva/index.jsx":"2"},{"size":1480,"mtime":1606843646679,"results":"3","hashOfConfig":"4"},{"size":1960,"mtime":1606842294637,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s3g3ch",{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/aiyouwei/Documents/proger/progerchai/proger1130/dva-code-learning/src/index.jsx",[],"/Users/aiyouwei/Documents/proger/progerchai/proger1130/dva-code-learning/src/dva/index.jsx",["11","12"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { combineReducers, createStore } from \"redux\";\nimport { Provider, connect } from \"react-redux\";\nexport { connect };\nexport default function (opts = {}) {\n  let history = opts.history || createBrowserHistory();\n  let app = {\n    _models: [],\n    model,\n    _router: null,\n    router,\n    start,\n  };\n  function model(model) {\n    let prefixModel = prefixNamespace(model);\n    app._models.push(prefixModel);\n  }\n  function router(routerConfig) {\n    app._router = routerConfig;\n  }\n  function start(container) {\n    let reducers = getReducers(app);\n    app._store = createStore(reducers);\n    ReactDOM.render(\n      <Provider store={app._store}>{app._router()}</Provider>,\n      document.querySelector(container)\n    );\n  }\n\n  return app;\n}\n\n/**\n * 将所有的model 的reducer 以namespace 为key 整合成新的reducers\n * {\n * namespace1:function(state,action){},\n * namespace2:function(state,action){}\n * }\n * @param {*} app\n */\nfunction getReducers(app) {\n  let reducers = {}; //用来合并,会传递给combineReducers\n  for (const model of app._models) {\n    // 这里的state 是这个 model 对应的分状态\n    reducers[model.namespace] = function (state = model.state || {}, action) {\n      let model_reducers = model[\"reducers\"] || {}; // 拿到一个model 的所有reducer\n      let reducer = model_reducers[action.type]; // model_reducers['counter/add'] =>  model_reducers['add']\n      if (reducer) {\n        return reducer(state, action);\n      }\n      return state;\n    };\n  }\n  return combineReducers(reducers);\n}\n\n/**\n * 把reducer 对象的属性名 加上 `namespace`\n * @param {*} m\n */\nfunction prefixNamespace(m) {\n  let reducers = m.reducers;\n  m.reducer = Object.keys(reducers).reduce((memo, key) => {\n    let newKey = `${m.namespace}/${key}`;\n    memo[newKey] = reducers[key];\n    return memo;\n  }, {});\n  return m;\n}\n",{"ruleId":"13","severity":1,"message":"14","line":7,"column":1,"nodeType":"15","endLine":33,"endColumn":2},{"ruleId":"16","severity":1,"message":"17","line":8,"column":7,"nodeType":"18","messageId":"19","endLine":8,"endColumn":14},"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar"]